aws glue list-jobs

aws glue get-job --job-name your-job-name

for job_name in $(aws glue list-jobs --output text --query 'JobNames'); do
    script_location=$(aws glue get-job --job-name $job_name --query 'Job.Command.ScriptLocation' --output text)
    echo "Job Name: $job_name, Script Location: $script_location"
done

@echo off

setlocal enabledelayedexpansion
set "count=0"

for /f "delims=" %%A in ('aws glue list-jobs --output text --query "JobNames[]"') do (
    if !count! gtr 0 (
        echo.
    )
    echo %%A
    set /a "count+=1"
)


@echo off

setlocal enabledelayedexpansion

for /f "delims=" %%A in (glue_job_names.txt) do (
    set "job_name=%%A"
    for /f "delims=" %%B in ('aws glue get-job --job-name "!job_name!" --query "Job.Command.ScriptLocation" --output text') do (
        echo Job Name: !job_name!, Script Location: %%B
    )
)


import boto3

# Initialize Glue client
glue_client = boto3.client('glue')

# Retrieve all Glue jobs
all_jobs = []
next_token = None

while True:
    if next_token:
        response = glue_client.get_jobs(NextToken=next_token)
    else:
        response = glue_client.get_jobs()

    all_jobs.extend(response['Jobs'])
    next_token = response.get('NextToken')

    if not next_token:
        break

# Print job names and script locations
for job in all_jobs:
    job_name = job['Name']
    script_location = job['Command']['ScriptLocation']
    print(f"Job Name: {job_name}, Script Location: {script_location}")

